[tool.poetry]
name = "parco"
version = "0.1.0"
description = "PARCO: Learning Parallel Autoregressive Policies for Efficient Multi-Agent Combinatorial Optimization"
authors = [
    "Federico Berto <berto.federico2@gmail.com>",
    "Chuanbo Hua <cbhua@kaist.ac.kr>",
    "Laurin Luttmann <laurin.luttmann@gmail.com>",
    "Jiwoo Son",
    "Junyoung Park",
    "Kyuree Ahn",
    "Changhyun Kwon",
    "Lin Xie",
    "Jinkyoo Park",
]
license = "MIT"
packages = [{ include = "parco" }]

[tool.poetry.dependencies]
rl4co = {version = ">=0.5.0", extras = ["dev"]}

[tool.black]
line-length = 90
target-version = ["py311"]
include = '\.pyi?$'
exclude = '''
(
  /(
      \.direnv
    | \.eggs
    | \.git
    | \.tox
    | \.venv
    | _build
    | build
    | dist
    | venv
  )/
)
'''

[tool.ruff]
select = ["F", "E", "W", "I001"]
line-length = 90
show-fixes = false
target-version = "py311"
task-tags = ["TODO", "FIXME"]
ignore = ["E501"] # never enforce `E501` (line length violations), done in Black

[tool.ruff.per-file-ignores]
"__init__.py" = ["E402", "F401"]

[tool.ruff.isort]
known-first-party = []
known-third-party = []
section-order = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder",
]
combine-as-imports = true
split-on-trailing-comma = false
lines-between-types = 1

[build-system]
requires = ["poetry"]
build-backend = "poetry.core.masonry.api"